version: '2'
services:

  dashboard:
    depends_on:
      - "kibana"
    restart: always
    command: ["bash", "/wait-for-it.sh", "kibana:5601", "-t", "0", "--", "/docker-entry.sh"]

  elasticsearch:
    image: inspiremif/elasticsearch:latest
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    environment:
      - NODE_NAME=elasticsearch
      - MINIMUM_MASTER_NODE=2
      - NODE_DATA=true
      - NODE_MASTER=true            
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTICSEARCH_MASTER=YES
    restart: always

  elasticsearch-node1:
    image: inspiremif/elasticsearch:latest
    depends_on:
      - "elasticsearch"
    environment:
      - NODE_NAME=elasticsearch-node1
      - MINIMUM_MASTER_NODE=2
      - NODE_DATA=true
      - NODE_MASTER=true
      - DISCOVERY_ZEN="elasticsearch"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTICSEARCH_MASTER=NO
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    restart: always

  elasticsearch-node2:
    image: inspiremif/elasticsearch:latest
    depends_on:
      - "elasticsearch"
    environment:
      - NODE_NAME=elasticsearch-node2
      - MINIMUM_MASTER_NODE=2
      - NODE_DATA=true
      - NODE_MASTER=false
      - DISCOVERY_ZEN="elasticsearch"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - ELASTICSEARCH_MASTER=NO
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    restart: always

  cerebro:
    image: snuids/cerebro:v0.7.1
    depends_on:
      - "elasticsearch"
    volumes:
      - ./cerebro/config/application.conf:/opt/cerebro/conf/application.conf
    restart: always
    container_name: sandbox-cerebro

  kibana:
    image: docker.elastic.co/kibana/kibana:5.6.5
    volumes:
      - ${PWD}/kibana/wait-for-it.sh:/wait-for-it.sh
      - ${PWD}/kibana/docker-entry.sh:/docker-entry.sh
    depends_on:
      - "elasticsearch"
    restart: always
    command: ["bash", "/wait-for-it.sh", "elasticsearch:9200", "-t", "0", "--", "/docker-entry.sh"]

  nginx:
    hostname: nginx
#    image: nginx:stable-alpine
    image: inspire-nginx    
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/pki/tls/certs/server-eionet.crt:/tmp/cert.crt:ro
      - /etc/pki/tls/private/server-eionet.key:/tmp/priv.key:ro
#      - ./nginx/nginx-ssl.conf:/etc/nginx/nginx.conf
    depends_on:
      - "dashboard"
    environment:
      - "GENERATESSL=YES"
      - "CERTIFICATESUBJ=/C=DK/ST=Copenhagen/L=Copenhagen/O=EEA/OU=IT Department/CN=inspire-dashboard.eea"
    restart: always
    command: ["sh", "./entry-point.sh"]
